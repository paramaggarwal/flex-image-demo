//
//  RCTNetworkImageShadowView.m
//  RCTImage
//
//  Created by Param Aggarwal on 07/06/15.
//  Copyright (c) 2015 Facebook. All rights reserved.
//

#import "RCTImageShadowView.h"

@implementation RCTImageShadowView

static css_dim_t RCTMeasure(void *context, float width)
{
  RCTImageShadowView *imageShadowView = (__bridge RCTImageShadowView *)context;
  if (isnan(width)) width = imageShadowView.intrinsicWidth;
  
  CGSize computedSize;
  if (imageShadowView.intrinsicWidth > 0) {
    CGFloat computedHeight = width * (imageShadowView.intrinsicHeight / imageShadowView.intrinsicWidth);
    computedSize = CGSizeMake(width, computedHeight);  
  } else {
    computedSize = CGSizeMake(0, 0);  
  }
    
  css_dim_t result;
  result.dimensions[CSS_WIDTH] = ceilf(computedSize.width);
  result.dimensions[CSS_HEIGHT] = ceilf(computedSize.height);
  return result;
}

/*
 * Sets the measure function on the cssNode, when the original
 * width and height of the image are known. This helps calculate
 * the height of the image based on width of parent, when
 * needed and hence maintains the aspect ratio of the image.
 */
#define RCT_IMAGE_PROPERTY(setProp, ivar, type)     \
- (void)set##setProp:(type)value;                   \
{                                                   \
  ivar = value;                                     \
  self.cssNode->measure = value ? RCTMeasure : nil; \
  [self dirtyLayout];                               \
}

RCT_IMAGE_PROPERTY(IntrinsicWidth, _intrinsicWidth, CGFloat);
RCT_IMAGE_PROPERTY(IntrinsicHeight, _intrinsicHeight, CGFloat);

@end
